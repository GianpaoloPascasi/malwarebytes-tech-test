import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { Item } from "../items/items.slice";

export interface User {
  id: number;
  user: string; //email
  isAdmin: boolean;
}

export interface Order {
  id: number;
  items: Array<Item>;
  status: number;
  userId: number;
}

export class UserState {
  user?: User;
  jwt?: string;
  orders?: Array<Order>;
}

export const userSlice = createSlice({
  name: "items",
  initialState: {
    user: undefined,
    jwt: undefined,
    orders: [],
  } as UserState,
  reducers: {
    login: (state, action: PayloadAction<User & { jwt: string }>) => {
      state.user = {
        id: action.payload.id,
        user: action.payload.user,
        isAdmin: action.payload.isAdmin,
      };
      state.jwt = action.payload.jwt;
    },
    logout: (state) => {
      state.user = undefined;
      state.jwt = undefined;
    },
    putOrders: (state, action: PayloadAction<Array<Order>>) => {
      state.orders = action.payload;
    },
  },
});

// Action creators are generated for each case reducer function
export const userSliceActions = userSlice.actions;

export default userSlice.reducer;
