import { combineReducers, configureStore } from "@reduxjs/toolkit";
import itemsSlice from "./items/items.slice";
import createSagaMiddleware from "redux-saga";
import itemsSagas from "./items/items.sagas";
import userSagas from "./user/user.sagas";
import userSlice from "./user/user.slice";

const sagaMiddleware = createSagaMiddleware();

const rootReducer = combineReducers({
  items: itemsSlice,
  user: userSlice
});

const store = configureStore({
  reducer: rootReducer,
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware().concat(sagaMiddleware),
});

[
  ...itemsSagas,
  ...userSagas,
].forEach((saga) => sagaMiddleware.run(saga));

// Infer the `RootState` and `AppDispatch` types from the store itself
export type RootState = ReturnType<typeof store.getState>;
// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}
export type AppDispatch = typeof store.dispatch;
