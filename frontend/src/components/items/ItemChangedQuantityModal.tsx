import DialogTitle from "@mui/material/DialogTitle";
import Dialog from "@mui/material/Dialog";
import Typography from "@mui/material/Typography";
import { useDispatch, useSelector } from "react-redux";
import { selectItemById } from "../../store/items/items.selectors";
import { selectUiData } from "../../store/ui/ui.selectors";
import { Item } from "../../store/items/items.slice";
import { Grid } from "@mui/material";
import { Button } from "@mui/material";
import { uiSliceActions } from "../../store/ui/ui.slice";

export const ITEM_CHANGED_QUANTITY_MODAL = "ITEM_CHANGED_QUANTITY_MODAL";
export interface AddItemToOrderDialogProps {
  open: boolean;
  item: Item;
  isDecreased: boolean;
  quantity: number;
  onClose: () => void;
}

export function ItemChangedQuantityDialog(props: AddItemToOrderDialogProps) {
  const { onClose, item, isDecreased, quantity, open } = props;

  return (
    <Dialog onClose={onClose} open={open} maxWidth="lg" fullWidth={true}>
      <DialogTitle>Someone changed the data:</DialogTitle>
      <Typography align="center">
        {item.name} quantity {isDecreased ? "decreased" : "increased"}{" "}
        by {quantity}
      </Typography>
      <Grid
        xs={12}
        item
        display="flex"
        justifyContent="end"
        spacing={2}
        padding={2}
      >
        <Button
          variant="contained"
          onClick={onClose}
          style={{ alignSelf: "end" }}
        >
          Close
        </Button>
      </Grid>
    </Dialog>
  );
}

export default function ItemChangedQuantityDialogContainer() {
  const dialogData = useSelector(selectUiData(ITEM_CHANGED_QUANTITY_MODAL));
  const item = useSelector(selectItemById(Number(dialogData?.id)));
  const dispatch = useDispatch();

  const onClose = () => {
    dispatch(
      uiSliceActions.setUiData({
        uiElementName: ITEM_CHANGED_QUANTITY_MODAL,
        data: { show: false },
      })
    );
  };

  return dialogData?.show && item ? (
    <ItemChangedQuantityDialog
      item={item}
      open={dialogData.show}
      onClose={onClose}
      isDecreased={dialogData.isDecreased}
      quantity={dialogData.quantity}
    />
  ) : null;
}
