import { UserSession } from '../user-session/user-session';
import { AdminGuard } from './admin.guard';
import { sign as jwtSign } from 'jsonwebtoken';

function generateExectutionContext(token) {
  return {
    switchToHttp() {
      return {
        getRequest() {
          return {
            headers: {
              authorization: `Bearer ${token}`,
            },
          };
        },
        getNext() {
          return {};
        },
        getResponse() {
          return {};
        },
      };
    },
  };
}

describe('AuthGuard', () => {
  const userSession = new UserSession();
  const authMiddleware = new AdminGuard(userSession);

  it('should be defined', () => {
    expect(authMiddleware).toBeDefined();
  });

  it('should test user in session is not admin', () => {
    userSession.isAdmin = false;
    expect(authMiddleware.canActivate()).toBe(false);
  });

  it('should test user in session is admin', () => {
    userSession.isAdmin = true;
    expect(authMiddleware.canActivate()).toBe(true);
  });
});
