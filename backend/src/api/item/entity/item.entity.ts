import {
  BaseEntity,
  Column,
  CreateDateColumn,
  Entity,
  Index,
  ManyToOne,
  OneToMany,
  PrimaryGeneratedColumn,
} from 'typeorm';
import { UserEntity } from '../../user/entity/user.entity';
import { ApiProperty } from '@nestjs/swagger';

@Entity()
@Index(['message', 'user'], { unique: true })
export class ItemEntity extends BaseEntity {
  @ApiProperty()
  @PrimaryGeneratedColumn()
  id: number;

  @ApiProperty()
  @Column()
  message: string;

  @ApiProperty()
  @Column({ default: false })
  notified: boolean;

  @ManyToOne(() => UserEntity, (user) => user.messages)
  user: UserEntity;

  @ApiProperty()
  @CreateDateColumn()
  createdAt: Date;

  constructor(message?: string) {
    super();
    if (message) {
      this.message = message;
    }
  }
}
