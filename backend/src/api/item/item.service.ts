import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { ApiResponse } from '../../model/response.model';
import { CreateItemDto } from './dto/create-item.dto';
import { UpdateItemDto } from './dto/update-item.dto';
import { ItemEntity } from './entities/item.entity';

@Injectable()
export class ItemService {
  constructor(
    @InjectRepository(ItemEntity)
    public readonly itemsRepository: Repository<ItemEntity>,
  ) {}

  async create(createItemDto: CreateItemDto): Promise<ApiResponse<ItemEntity>> {
    const item = new ItemEntity();
    item.name = createItemDto.name;
    item.description = createItemDto.description;
    item.quantity = createItemDto.quantity;
    await item.save();
    return {
      code: 200,
      msg: `Item ${item.name} added correctly`,
      data: item,
    };
  }

  async findAll(): Promise<ApiResponse<Array<ItemEntity>>> {
    return {
      code: 200,
      msg: '',
      data: await this.itemsRepository.find(),
    };
  }

  findOne(id: number) {
    return `This action returns a #${id} item`;
  }

  update(id: number, updateItemDto: UpdateItemDto) {
    return `This action updates a #${id} item`;
  }

  remove(id: number) {
    return `This action removes a #${id} item`;
  }
}
