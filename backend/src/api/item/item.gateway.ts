import { Logger } from '@nestjs/common';
import { OnEvent } from '@nestjs/event-emitter';
import {
  OnGatewayInit,
  SubscribeMessage,
  WebSocketGateway,
  WebSocketServer,
} from '@nestjs/websockets';
import { Server } from 'socket.io';
import { AppWebsocketResponse } from '../../model/websocket/response.model';
import { ItemEntity } from './entities/item.entity';

@WebSocketGateway(Number(process.env.WEBSOCKET_PORT) ?? 3001, {
  cors: {
    origin: /^http\:\/\/localhost\:[0-9]{4}$/,
  },
  namespace: 'items',
  transports: ['websocket'],
})
export class ItemGateway implements OnGatewayInit {
  @WebSocketServer()
  server: Server;

  private logger = new Logger(ItemGateway.name);

  afterInit() {
    this.logger.log(
      `Websocket listening on ${Number(process.env.WEBSOCKET_PORT) ?? 3001}`,
    );
  }

  @OnEvent('item.quantity.changed')
  handleItemQuantityChanged(item: ItemEntity) {
    this.server.emit('item.quantity.changed', {
      code: 200,
      data: item,
      msg: `Item ${item.name} decreased by 1`,
      action: 'UPDATE_ITEMS',
    } as AppWebsocketResponse<ItemEntity>);
  }
}
